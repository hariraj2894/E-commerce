{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gange\\\\Desktop\\\\paymentgate\\\\frontend\\\\src\\\\components\\\\PaymentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport '../styles/PaymentPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaymentPage = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const {\n    cart = [],\n    totalPrice = 0\n  } = state || {};\n  const [paymentStatus, setPaymentStatus] = useState(null);\n  const artistId = localStorage.getItem(\"artisanIdproduct\");\n  const userId = localStorage.getItem(\"user\");\n  const [allowCOD, setAllowCOD] = useState(false);\n  const [user, setUser] = useState(null);\n  const [codCount, setCodCount] = useState(0);\n  const [address, setAddress] = useState(\"\");\n  const [isAddressValid, setIsAddressValid] = useState(false);\n  const [cardDetails, setCardDetails] = useState({\n    cardNumber: \"\",\n    expiryDate: \"\",\n    cvv: \"\"\n  });\n\n  // Check user's COD limit on component mount\n  useEffect(() => {\n    const checkCODLimit = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/api/cod/${userId}`);\n        setUser(response.data);\n        setCodCount(response.data.codCount);\n        if (response.data.codCount >= 5) {\n          setAllowCOD(true);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    checkCODLimit();\n  }, [userId]);\n\n  // Handle payment for both COD and Online\n  const handlePayment = async paymentMethod => {\n    if (!isAddressValid) {\n      alert(\"Please enter a valid address before making the payment.\");\n      return;\n    }\n    if (!artistId) {\n      setPaymentStatus(\"Error: Artisan not found.\");\n      return;\n    }\n\n    // if (paymentMethod === \"COD\" && codCount >= 5) {\n    //   setPaymentStatus(\"COD limit reached. Please use online payment.\");\n    //   return;\n    // }\n\n    if (paymentMethod === \"Online\") {\n      const {\n        cardNumber,\n        expiryDate,\n        cvv\n      } = cardDetails;\n      if (!/^\\d{12,19}$/.test(cardNumber) || !/^\\d{2}\\/\\d{2}$/.test(expiryDate) || !/^\\d{3}$/.test(cvv)) {\n        setPaymentStatus(\"Invalid card details. Please check and try again.\");\n        return;\n      }\n    }\n    setPaymentStatus(\"Processing...\");\n    const productData = cart.map(item => ({\n      productId: item._id,\n      quantity: item.quantity,\n      pname: item.name\n    }));\n    try {\n      const [updateResponse, codResponse, cartResponse] = await Promise.allSettled([axios.post(\"http://localhost:4000/api/updateearned\", {\n        artisianId: artistId,\n        amount: totalPrice\n      }), axios.post(`http://localhost:4000/api/checkcod/${userId}`), axios.post(\"http://localhost:4000/api/usercart\", {\n        userId,\n        quantity: cart.length,\n        productIds: productData,\n        address\n      })]);\n      if (updateResponse.status === 'fulfilled' && cartResponse.status === 'fulfilled') {\n        setPaymentStatus(\"Payment Successful!\");\n        window.location.href = '/your-profile';\n      } else {\n        setPaymentStatus(\"Payment Failed. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Payment error:\", error);\n      setPaymentStatus(\"Payment Failed. Please try again.\");\n    }\n  };\n\n  // Handle user address input\n  const handleAddressChange = e => {\n    const inputAddress = e.target.value;\n    setAddress(inputAddress);\n    const isValidAddress = /^[a-zA-Z0-9\\s,'-]{5,}$/.test(inputAddress); // Improved address validation\n    setIsAddressValid(isValidAddress);\n  };\n\n  // Handle card details input\n  const handleCardInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setCardDetails(prevDetails => ({\n      ...prevDetails,\n      [id]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"payment-heading\",\n      children: \"Payment Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No items in the cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: item.name,\n          className: \"cart-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u20B9\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total: \\u20B9\", item.price * item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Total: \\u20B9\", totalPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"address-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter Your Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter your delivery address\",\n        value: address,\n        onChange: handleAddressChange,\n        className: \"address-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), !isAddressValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: \"Please enter a valid address with at least 5 characters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Payment Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: codCount < 5 ? `${5 - codCount} COD orders left before online payment is available.` : 'You can now use both COD and online payment options.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePayment(\"COD\"),\n        className: \"payment-button\",\n        children: \"Cash on Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), codCount >= 5 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardNumber\",\n            children: \"Card Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"1234567890123456\",\n            id: \"cardNumber\",\n            value: cardDetails.cardNumber,\n            onChange: handleCardInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"expiryDate\",\n            children: \"Expiry Date (MM/YY):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"MM/YY\",\n            id: \"expiryDate\",\n            value: cardDetails.expiryDate,\n            onChange: handleCardInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cvv\",\n            children: \"CVV:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"000\",\n            id: \"cvv\",\n            value: cardDetails.cvv,\n            onChange: handleCardInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePayment(\"Online\"),\n          className: isAddressValid ? \"payment-button\" : \"payment-button disabled-button\",\n          disabled: !isAddressValid,\n          children: \"Pay Online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), paymentStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paymentStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"VPZVyFk6y2yWtF8x5lyUEuDZsjQ=\", false, function () {\n  return [useLocation];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentPage","_s","state","cart","totalPrice","paymentStatus","setPaymentStatus","artistId","localStorage","getItem","userId","allowCOD","setAllowCOD","user","setUser","codCount","setCodCount","address","setAddress","isAddressValid","setIsAddressValid","cardDetails","setCardDetails","cardNumber","expiryDate","cvv","checkCODLimit","response","get","data","error","console","handlePayment","paymentMethod","alert","test","productData","map","item","productId","_id","quantity","pname","name","updateResponse","codResponse","cartResponse","Promise","allSettled","post","artisianId","amount","length","productIds","status","window","location","href","handleAddressChange","e","inputAddress","target","value","isValidAddress","handleCardInputChange","id","prevDetails","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","price","placeholder","onChange","onClick","htmlFor","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gange/Desktop/paymentgate/frontend/src/components/PaymentPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport '../styles/PaymentPage.css';\r\n\r\nconst PaymentPage = () => {\r\n  const { state } = useLocation();\r\n  const { cart = [], totalPrice = 0 } = state || {}; \r\n  const [paymentStatus, setPaymentStatus] = useState(null);\r\n  const artistId = localStorage.getItem(\"artisanIdproduct\");\r\n  const userId = localStorage.getItem(\"user\");\r\n  const [allowCOD, setAllowCOD] = useState(false); \r\n  const [user, setUser] = useState(null); \r\n  const [codCount, setCodCount] = useState(0); \r\n  const [address, setAddress] = useState(\"\"); \r\n  const [isAddressValid, setIsAddressValid] = useState(false); \r\n  const [cardDetails, setCardDetails] = useState({\r\n    cardNumber: \"\",\r\n    expiryDate: \"\",\r\n    cvv: \"\"\r\n  });\r\n\r\n  // Check user's COD limit on component mount\r\n  useEffect(() => {\r\n    const checkCODLimit = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:4000/api/cod/${userId}`);\r\n        setUser(response.data);\r\n        setCodCount(response.data.codCount);\r\n        if (response.data.codCount >= 5) {\r\n          setAllowCOD(true);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n    checkCODLimit();\r\n  }, [userId]);\r\n\r\n  // Handle payment for both COD and Online\r\n  const handlePayment = async (paymentMethod) => {\r\n    if (!isAddressValid) {\r\n      alert(\"Please enter a valid address before making the payment.\");\r\n      return;\r\n    }\r\n\r\n    if (!artistId) {\r\n      setPaymentStatus(\"Error: Artisan not found.\");\r\n      return;\r\n    }\r\n\r\n    // if (paymentMethod === \"COD\" && codCount >= 5) {\r\n    //   setPaymentStatus(\"COD limit reached. Please use online payment.\");\r\n    //   return;\r\n    // }\r\n\r\n    if (paymentMethod === \"Online\") {\r\n      const { cardNumber, expiryDate, cvv } = cardDetails;\r\n      if (!/^\\d{12,19}$/.test(cardNumber) || !/^\\d{2}\\/\\d{2}$/.test(expiryDate) || !/^\\d{3}$/.test(cvv)) {\r\n        setPaymentStatus(\"Invalid card details. Please check and try again.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    setPaymentStatus(\"Processing...\");\r\n\r\n    const productData = cart.map(item => ({\r\n      productId: item._id, \r\n      quantity: item.quantity,\r\n      pname: item.name,\r\n    }));\r\n\r\n    try {\r\n      const [updateResponse, codResponse, cartResponse] = await Promise.allSettled([\r\n        axios.post(\"http://localhost:4000/api/updateearned\", { artisianId: artistId, amount: totalPrice }),\r\n        axios.post(`http://localhost:4000/api/checkcod/${userId}`),\r\n        axios.post(\"http://localhost:4000/api/usercart\", { userId, quantity: cart.length, productIds: productData, address })\r\n      ]);\r\n\r\n      if (updateResponse.status === 'fulfilled' && cartResponse.status === 'fulfilled') {\r\n        setPaymentStatus(\"Payment Successful!\");\r\n        window.location.href='/your-profile';\r\n      } else {\r\n        setPaymentStatus(\"Payment Failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Payment error:\", error);\r\n      setPaymentStatus(\"Payment Failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Handle user address input\r\n  const handleAddressChange = (e) => {\r\n    const inputAddress = e.target.value;\r\n    setAddress(inputAddress);\r\n    const isValidAddress = /^[a-zA-Z0-9\\s,'-]{5,}$/.test(inputAddress); // Improved address validation\r\n    setIsAddressValid(isValidAddress);\r\n  };\r\n\r\n  // Handle card details input\r\n  const handleCardInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setCardDetails(prevDetails => ({\r\n      ...prevDetails,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <h1 className=\"payment-heading\">Payment Details</h1>\r\n\r\n      <div className=\"cart-details\">\r\n        <h2>Cart Items</h2>\r\n        {cart.length === 0 ? (\r\n          <p>No items in the cart</p>\r\n        ) : (\r\n          cart.map((item) => (\r\n            <div key={item._id} className=\"cart-item\">\r\n              <img src={item.image} alt={item.name} className=\"cart-image\" />\r\n              <div className=\"cart-item-info\">\r\n                <p>{item.name}</p>\r\n                <p>₹{item.price}</p>\r\n                <p>Quantity: {item.quantity}</p>\r\n                <p>Total: ₹{item.price * item.quantity}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div className=\"cart-summary\">\r\n          <h3>Total: ₹{totalPrice}</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"address-section\">\r\n        <h2>Enter Your Address</h2>\r\n        <textarea\r\n          placeholder=\"Enter your delivery address\"\r\n          value={address}\r\n          onChange={handleAddressChange}\r\n          className=\"address-input\"\r\n        />\r\n        {!isAddressValid && <p className=\"error-message\">Please enter a valid address with at least 5 characters.</p>}\r\n      </div>\r\n\r\n      <div className=\"payment-options\">\r\n        <h2>Payment Method</h2>\r\n        <h3>{codCount < 5 ? `${5 - codCount} COD orders left before online payment is available.` : 'You can now use both COD and online payment options.'}</h3>\r\n        \r\n        <button\r\n          onClick={() => handlePayment(\"COD\")}\r\n          className=\"payment-button\"\r\n        >\r\n          Cash on Delivery\r\n        </button>\r\n\r\n        {codCount >= 5 && (\r\n          <>\r\n            <form>\r\n              <label htmlFor=\"cardNumber\">Card Number:</label>\r\n              <input \r\n                type=\"number\" \r\n                placeholder=\"1234567890123456\" \r\n                id=\"cardNumber\" \r\n                value={cardDetails.cardNumber}\r\n                onChange={handleCardInputChange}\r\n              />\r\n\r\n              <label htmlFor=\"expiryDate\">Expiry Date (MM/YY):</label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"MM/YY\" \r\n                id=\"expiryDate\" \r\n                value={cardDetails.expiryDate}\r\n                onChange={handleCardInputChange}\r\n              />\r\n\r\n              <label htmlFor=\"cvv\">CVV:</label>\r\n              <input \r\n                type=\"number\" \r\n                placeholder=\"000\" \r\n                id=\"cvv\" \r\n                value={cardDetails.cvv}\r\n                onChange={handleCardInputChange}\r\n              />\r\n            </form>\r\n\r\n            <button\r\n              onClick={() => handlePayment(\"Online\")}\r\n              className={isAddressValid ? \"payment-button\" : \"payment-button disabled-button\"}\r\n              disabled={!isAddressValid}\r\n            >\r\n              Pay Online\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {paymentStatus && <p>{paymentStatus}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}